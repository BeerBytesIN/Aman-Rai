class Solution {
public:
    int count=0;
    void merge(vector<int>&nums,int l,int mid,int h)
    {
        int i=l,j=mid+1;
        while(i<=mid and j<=h)
        {
            if((long)nums[i]>(long)2*nums[j]){count=count+mid-i+1;j++;}
            else
                i++;
        }
        sort(nums.begin()+l,nums.begin()+h+1);
    }
    void mergesort(vector<int>&nums,int l,int h)
    {
        if(l==h)return ;
        int mid=l+(h-l)/2;
        mergesort(nums,l,mid);
        mergesort(nums,mid+1,h);
        merge(nums,l,mid,h);
    }
    int reversePairs(vector<int>& nums) {
        if(nums.size()==0)return 0;
        count=0;
        mergesort(nums,0,nums.size()-1);
        return count;
    }
};