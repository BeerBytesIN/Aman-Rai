class Solution {
public:
    vector<vector<int>> insert(vector<vector<int>>& intervals, vector<int>& newInterval) {
    vector<vector<int>>res;
        if(intervals.size()==0){
            res.push_back(newInterval);return res;}
        int i,b=newInterval[0],end=newInterval[1];
        i=0;
        while(i<intervals.size())
        {
            if(intervals[i][0]<=b)
                res.push_back(intervals[i]);
            else
                break;
            i++;
        }
        if(i==0){
            if(intervals[i][0]<=end){
                end=max(intervals[i][1],end);i++;}
        }
        else{
        vector<int>v1; 
        v1 =res[res.size()-1];
        //cout<<v1[0]<<v1[1];
        if(v1[1]>=b)
        {
            b=v1[0],end=max(v1[1],end);
            res.pop_back();
            cout<<end;
        }
        else if(i<intervals.size() and intervals[i][0]<=end){
            end=max(end,intervals[i][1]);i++;
        }}
        while(i<intervals.size() and intervals[i][0]<=end)
        {
            end=max(end,intervals[i][1]);
            i++;
        }
        res.push_back({b,end});
        while(i<intervals.size() and i<intervals.size())
        {
            res.push_back(intervals[i]);
            i++;
        }
        return res;
    
    }
};