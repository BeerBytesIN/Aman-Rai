class Solution {
public:
    int longestConsecutive(vector<int>& nums) {
        map<int,int>m1;
        int i;
        int len=0;
        for(i=0;i<nums.size();i++)
        {
            if(m1.find(nums[i])==m1.end())
            {
                int left,right;
                left=m1.find(nums[i]-1)!=m1.end()?m1[nums[i]-1]:0;
                right=m1.find(nums[i]+1)!=m1.end()?m1[nums[i]+1]:0;
                int sum=left+right+1;
                len=max(len,sum);
                m1[nums[i]]=sum;
                if(m1.find(nums[i]-left)!=m1.end()){m1[nums[i]-left]=sum;}
                if(m1.find(nums[i]+right)!=m1.end()){m1[nums[i]+right]=sum;}
            }
            else
                continue;
        }
       
        return len;
    }
};