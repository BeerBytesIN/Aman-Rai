class Solution {
public:
    int get(vector<int>&prices,int i,int d,vector<vector<int>>&dp)
    {
        if(i>=prices.size())return 0;
        int m1,m2;
        if(dp[i][d]!=-1)return dp[i][d];
        if(d==0)
        {
            m1=max(get(prices,i+1,1,dp)-prices[i],get(prices,i+1,0,dp));
            dp[i][d]=m1;
        }
        else if(d==1)
        {
            m1=max(prices[i],get(prices,i+1,1,dp));
            dp[i][d]=m1;
        }
        return m1;
    }
    int maxProfit(vector<int>& prices) {
        vector<vector<int>>dp(prices.size(),vector<int>(2,-1));
        return get(prices,0,0,dp);
    }
};